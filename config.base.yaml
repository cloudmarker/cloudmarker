clouds:
  mockcloud:
    plugin: cloudmarker.clouds.mockcloud.MockCloud

stores:
  filestore:
    plugin: cloudmarker.stores.filestore.FileStore
  mongodbstore:
    plugin: cloudmarker.stores.mongodbstore.MongoDBStore

events:
  mockevent:
    plugin: cloudmarker.events.mockevent.MockEvent
  firewallevent:
    plugin: cloudmarker.evengts.firewallevent.FirewallEvent

alerts:
  filestore:
    plugin: cloudmarker.stores.filestore.FileStore
  slackalert:
    plugin: cloudmarker.alerts.slackalert.SlackAlert
    params:
      bot_user_token: foo-bot-token
      to:
        - foo@example.com
      text: foo
  emailstore:
    plugin: cloudmarker.stores.emailstore.EmailStore
    params:
      isSSLRequired: False
      host: smtp.host.example.com
      port: 25
      sender: CloudMarker Alert <no-reply@example.com>
      to:
        - recipient1@example.com
        - recipient2@example.com
      subject: Anomaly notification
      body: default text
      username: username
      password: password

audits:
  mockaudit:
    clouds:
      - mockcloud
    stores:
      - filestore
    events:
      - mockevent
    alerts:
      - filestore
      - emailstore



run:
  - mockaudit


logger:

  version: 1
  disable_existing_loggers: false

  formatters:
    simple:
      format: "%(asctime)s %(levelname)s %(name)s:%(lineno)d - %(message)s"
      datefmt: "%Y-%m-%d %H:%M:%S"

  handlers:
    console:
      class: logging.StreamHandler
      level: DEBUG
      formatter: simple
      stream: ext://sys.stdout
    file_handler:
      class: logging.handlers.TimedRotatingFileHandler
      level: DEBUG
      formatter: simple
      filename: logs/cloudmarker.log
      when: midnight
      encoding: utf8

  loggers:
    adal-python:
      level: WARNING

  root:
    level: INFO
    handlers:
      - console
      - file_handler


schedule: "00:00"
